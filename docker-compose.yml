version: '3.1'

services:
  gameinitializer:
    build: "./GameInitializer"
    restart: "on-failure"
    expose:
      - "8080"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 3s
      retries: 3

  persistence:
    build: "./Persistence"
    restart: "on-failure"
    expose:
      - "8080"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 3s
      retries: 3

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: scotty4life
      PGDATA: /data
    ports:
      - 5432:5432
    volumes:
      - "../.ScottyDB:/data"

  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: scotty4life
    ports:
      - 27017:27017
    volumes:
      - "../.ScottyDB_MongoDB:/data"

  main:
    build: "."
    restart: "on-failure"
    ports:
      - 8080:8080
    depends_on:
      - gameinitializer
      - persistence
    environment:
      DISPLAY: unix$DISPLAY
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/tmp/.X11-unix:/tmp/.X11-unix"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 3s
      retries: 3